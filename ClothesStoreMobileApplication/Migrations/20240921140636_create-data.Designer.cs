// <auto-generated />
using System;
using ClothesStoreMobileApplication.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace ClothesStoreMobileApplication.Migrations
{
    [DbContext(typeof(ClothesStoreContext))]
    [Migration("20240921140636_create-data")]
    partial class createdata
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("ClothesStoreMobileApplication.Models.Admin", b =>
                {
                    b.Property<int>("AdminId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("AdminId"));

                    b.Property<string>("Avt")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Cover")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("AdminId");

                    b.HasIndex("UserId");

                    b.ToTable("Admins");

                    b.HasData(
                        new
                        {
                            AdminId = 1,
                            Avt = "https://i.imgur.com/83aoGyM.gif",
                            Cover = "admin_cover.jpg",
                            UserId = 1
                        });
                });

            modelBuilder.Entity("ClothesStoreMobileApplication.Models.Cart", b =>
                {
                    b.Property<int>("CartId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CartId"));

                    b.Property<int>("CustomerId")
                        .HasColumnType("int");

                    b.HasKey("CartId");

                    b.HasIndex("CustomerId");

                    b.ToTable("Carts");

                    b.HasData(
                        new
                        {
                            CartId = 1,
                            CustomerId = 1
                        });
                });

            modelBuilder.Entity("ClothesStoreMobileApplication.Models.CartItem", b =>
                {
                    b.Property<int>("CartItemId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CartItemId"));

                    b.Property<int>("CartId")
                        .HasColumnType("int");

                    b.Property<int>("ProductId")
                        .HasColumnType("int");

                    b.Property<int>("Quantity")
                        .HasColumnType("int");

                    b.HasKey("CartItemId");

                    b.HasIndex("CartId");

                    b.HasIndex("ProductId");

                    b.ToTable("CartItems");

                    b.HasData(
                        new
                        {
                            CartItemId = 1,
                            CartId = 1,
                            ProductId = 1,
                            Quantity = 2
                        });
                });

            modelBuilder.Entity("ClothesStoreMobileApplication.Models.Category", b =>
                {
                    b.Property<int>("CategoryId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CategoryId"));

                    b.Property<string>("Img")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("CategoryId");

                    b.ToTable("Categories");

                    b.HasData(
                        new
                        {
                            CategoryId = 1,
                            Img = "https://plus.unsplash.com/premium_photo-1673356301535-2cc45bcc79e4?q=80&w=1887&auto=format&fit=crop&ixlib=rb-4.0.3&ixid=M3wxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8fA%3D%3D",
                            Name = "T-Shirts"
                        },
                        new
                        {
                            CategoryId = 2,
                            Img = "https://plus.unsplash.com/premium_photo-1674828601362-afb73c907ebe?q=80&w=1953&auto=format&fit=crop&ixlib=rb-4.0.3&ixid=M3wxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8fA%3D%3D",
                            Name = "Jeans"
                        },
                        new
                        {
                            CategoryId = 3,
                            Img = "https://plus.unsplash.com/premium_photo-1676212689512-5b66701912d4?q=80&w=2070&auto=format&fit=crop&ixlib=rb-4.0.3&ixid=M3wxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8fA%3D%3D",
                            Name = "Jackets"
                        },
                        new
                        {
                            CategoryId = 4,
                            Img = "https://plus.unsplash.com/premium_photo-1682435561654-20d84cef00eb?q=80&w=1918&auto=format&fit=crop&ixlib=rb-4.0.3&ixid=M3wxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8fA%3D%3D",
                            Name = "Shoes"
                        });
                });

            modelBuilder.Entity("ClothesStoreMobileApplication.Models.Chat", b =>
                {
                    b.Property<int>("RoomId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("RoomId"));

                    b.Property<int>("CustomerId")
                        .HasColumnType("int");

                    b.Property<int>("SellerId")
                        .HasColumnType("int");

                    b.HasKey("RoomId");

                    b.HasIndex("CustomerId");

                    b.HasIndex("SellerId");

                    b.ToTable("Chats");

                    b.HasData(
                        new
                        {
                            RoomId = 1,
                            CustomerId = 1,
                            SellerId = 1
                        });
                });

            modelBuilder.Entity("ClothesStoreMobileApplication.Models.ChatMessage", b =>
                {
                    b.Property<int>("MessageId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("MessageId"));

                    b.Property<string>("Content")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Icon")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Media")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("RoomId")
                        .HasColumnType("int");

                    b.Property<int>("SenderId")
                        .HasColumnType("int");

                    b.Property<DateTime>("Timestamp")
                        .HasColumnType("datetime2");

                    b.HasKey("MessageId");

                    b.HasIndex("RoomId");

                    b.HasIndex("SenderId");

                    b.ToTable("ChatMessages");

                    b.HasData(
                        new
                        {
                            MessageId = 1,
                            Content = "Hello, I have a question about my order.",
                            RoomId = 1,
                            SenderId = 1,
                            Timestamp = new DateTime(2024, 9, 21, 21, 6, 35, 513, DateTimeKind.Local).AddTicks(1497)
                        },
                        new
                        {
                            MessageId = 2,
                            Content = "Sure, how can I assist you?",
                            RoomId = 1,
                            SenderId = 2,
                            Timestamp = new DateTime(2024, 9, 21, 21, 6, 35, 513, DateTimeKind.Local).AddTicks(1499)
                        },
                        new
                        {
                            MessageId = 3,
                            Content = "Is there anything specific you need help with?",
                            RoomId = 1,
                            SenderId = 2,
                            Timestamp = new DateTime(2024, 9, 21, 21, 6, 35, 513, DateTimeKind.Local).AddTicks(1501)
                        });
                });

            modelBuilder.Entity("ClothesStoreMobileApplication.Models.Customer", b =>
                {
                    b.Property<int>("CustomerId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CustomerId"));

                    b.Property<string>("Address")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("Avt")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("CustomerId");

                    b.HasIndex("UserId");

                    b.ToTable("Customers");

                    b.HasData(
                        new
                        {
                            CustomerId = 1,
                            Address = "456 Customer Avenue, City Y",
                            Avt = "https://images.unsplash.com/photo-1556745753-b2904692b3cd?q=80&w=1973&auto=format&fit=crop&ixlib=rb-4.0.3&ixid=M3wxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8fA%3D%3D",
                            Name = "John Doe",
                            UserId = 3
                        });
                });

            modelBuilder.Entity("ClothesStoreMobileApplication.Models.Discount", b =>
                {
                    b.Property<int>("DiscountId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("DiscountId"));

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("DiscountPercentage")
                        .HasColumnType("decimal(18,2)");

                    b.Property<DateTime>("EndDate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("Quantity")
                        .HasColumnType("int");

                    b.Property<DateTime>("StartDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("Status")
                        .HasColumnType("bit");

                    b.HasKey("DiscountId");

                    b.ToTable("Discounts");

                    b.HasData(
                        new
                        {
                            DiscountId = 1,
                            Code = "SUMMER20",
                            Description = "20% off on summer collection",
                            DiscountPercentage = 20m,
                            EndDate = new DateTime(2024, 8, 31, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Quantity = 100,
                            StartDate = new DateTime(2024, 6, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Status = true
                        },
                        new
                        {
                            DiscountId = 2,
                            Code = "WINTER15",
                            Description = "15% off on winter collection",
                            DiscountPercentage = 15m,
                            EndDate = new DateTime(2025, 2, 28, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            StartDate = new DateTime(2024, 12, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Status = true
                        });
                });

            modelBuilder.Entity("ClothesStoreMobileApplication.Models.Option", b =>
                {
                    b.Property<int>("OptionId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("OptionId"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<int>("OptionGroupId")
                        .HasColumnType("int");

                    b.Property<decimal?>("Price")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("ProductId")
                        .HasColumnType("int");

                    b.HasKey("OptionId");

                    b.HasIndex("OptionGroupId");

                    b.HasIndex("ProductId");

                    b.ToTable("Options");

                    b.HasData(
                        new
                        {
                            OptionId = 1,
                            Name = "Small",
                            OptionGroupId = 1,
                            Price = 0m,
                            ProductId = 1
                        },
                        new
                        {
                            OptionId = 2,
                            Name = "Medium",
                            OptionGroupId = 1,
                            Price = 0m,
                            ProductId = 1
                        },
                        new
                        {
                            OptionId = 3,
                            Name = "Red",
                            OptionGroupId = 2,
                            Price = 0m,
                            ProductId = 1
                        },
                        new
                        {
                            OptionId = 4,
                            Name = "Blue",
                            OptionGroupId = 2,
                            Price = 0m,
                            ProductId = 1
                        });
                });

            modelBuilder.Entity("ClothesStoreMobileApplication.Models.Order", b =>
                {
                    b.Property<int>("OrderId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("OrderId"));

                    b.Property<int?>("CustomerId")
                        .HasColumnType("int");

                    b.Property<string>("DiscountCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("OrderDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("PaymentMethod")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ShipAddress")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("ShipFee")
                        .HasColumnType("int");

                    b.Property<string>("ShipMail")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ShipName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ShipPhone")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("TotalAmount")
                        .HasColumnType("float");

                    b.HasKey("OrderId");

                    b.HasIndex("CustomerId");

                    b.ToTable("Orders");

                    b.HasData(
                        new
                        {
                            OrderId = 1,
                            CustomerId = 1,
                            DiscountCode = "SUMMER20",
                            OrderDate = new DateTime(2024, 9, 21, 21, 6, 35, 513, DateTimeKind.Local).AddTicks(1356),
                            PaymentMethod = "credit_card",
                            ShipAddress = "123 Main St, Cityville",
                            ShipFee = 5,
                            ShipMail = "john@example.com",
                            ShipName = "John Doe",
                            ShipPhone = "123-456-7890",
                            Status = "pending",
                            TotalAmount = 100.0
                        },
                        new
                        {
                            OrderId = 2,
                            CustomerId = 1,
                            OrderDate = new DateTime(2024, 9, 21, 21, 6, 35, 513, DateTimeKind.Local).AddTicks(1360),
                            PaymentMethod = "paypal",
                            ShipAddress = "456 Elm St, Townsville",
                            ShipFee = 0,
                            ShipMail = "jane@example.com",
                            ShipName = "Jane Smith",
                            ShipPhone = "098-765-4321",
                            Status = "completed",
                            TotalAmount = 150.0
                        });
                });

            modelBuilder.Entity("ClothesStoreMobileApplication.Models.OrderItem", b =>
                {
                    b.Property<int>("OrderItemId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("OrderItemId"));

                    b.Property<string>("Note")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("OrderId")
                        .HasColumnType("int");

                    b.Property<int>("ProductId")
                        .HasColumnType("int");

                    b.Property<int>("Quantity")
                        .HasColumnType("int");

                    b.HasKey("OrderItemId");

                    b.HasIndex("OrderId");

                    b.HasIndex("ProductId");

                    b.ToTable("OrderItems");

                    b.HasData(
                        new
                        {
                            OrderItemId = 1,
                            Note = "Please gift wrap",
                            OrderId = 1,
                            ProductId = 1,
                            Quantity = 2
                        },
                        new
                        {
                            OrderItemId = 2,
                            OrderId = 1,
                            ProductId = 1,
                            Quantity = 1
                        },
                        new
                        {
                            OrderItemId = 3,
                            Note = "Urgent delivery",
                            OrderId = 2,
                            ProductId = 1,
                            Quantity = 3
                        });
                });

            modelBuilder.Entity("ClothesStoreMobileApplication.Models.Product", b =>
                {
                    b.Property<int>("ProductId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ProductId"));

                    b.Property<int?>("CartId")
                        .HasColumnType("int");

                    b.Property<int?>("CategoryId")
                        .HasColumnType("int");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Img")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<long>("NewPrice")
                        .HasColumnType("bigint");

                    b.Property<long?>("OldPrice")
                        .HasColumnType("bigint");

                    b.Property<int>("Quantity")
                        .HasColumnType("int");

                    b.Property<long>("QuantitySold")
                        .HasColumnType("bigint");

                    b.Property<int?>("SellerId")
                        .HasColumnType("int");

                    b.HasKey("ProductId");

                    b.HasIndex("CartId");

                    b.HasIndex("CategoryId");

                    b.HasIndex("SellerId");

                    b.ToTable("Products");

                    b.HasData(
                        new
                        {
                            ProductId = 1,
                            CategoryId = 1,
                            Description = "Description for T-Shirt 1",
                            Img = "https://images.unsplash.com/photo-1521572163474-6864f9cf17ab?q=80&w=1780&auto=format&fit=crop&ixlib=rb-4.0.3&ixid=M3wxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8fA%3D%3D",
                            Name = "T-Shirt 1",
                            NewPrice = 15L,
                            OldPrice = 20L,
                            Quantity = 100,
                            QuantitySold = 0L,
                            SellerId = 1
                        },
                        new
                        {
                            ProductId = 2,
                            CategoryId = 1,
                            Description = "Description for T-Shirt 2",
                            Img = "https://images.unsplash.com/photo-1485218126466-34e6392ec754?q=80&w=2071&auto=format&fit=crop&ixlib=rb-4.0.3&ixid=M3wxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8fA%3D%3D",
                            Name = "T-Shirt 2",
                            NewPrice = 18L,
                            OldPrice = 23L,
                            Quantity = 100,
                            QuantitySold = 0L,
                            SellerId = 1
                        },
                        new
                        {
                            ProductId = 3,
                            CategoryId = 1,
                            Description = "Description for T-Shirt 3",
                            Img = "https://plus.unsplash.com/premium_photo-1661373644394-ebc6f569826c?q=80&w=1888&auto=format&fit=crop&ixlib=rb-4.0.3&ixid=M3wxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8fA%3D%3D",
                            Name = "T-Shirt 3",
                            NewPrice = 20L,
                            OldPrice = 25L,
                            Quantity = 100,
                            QuantitySold = 0L,
                            SellerId = 1
                        },
                        new
                        {
                            ProductId = 4,
                            CategoryId = 1,
                            Description = "Description for T-Shirt 4",
                            Img = "https://images.unsplash.com/photo-1522706604291-210a56c3b376?q=80&w=1887&auto=format&fit=crop&ixlib=rb-4.0.3&ixid=M3wxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8fA%3D%3D",
                            Name = "T-Shirt 4",
                            NewPrice = 22L,
                            OldPrice = 27L,
                            Quantity = 100,
                            QuantitySold = 0L,
                            SellerId = 1
                        },
                        new
                        {
                            ProductId = 5,
                            CategoryId = 1,
                            Description = "Description for T-Shirt 5",
                            Img = "https://images.unsplash.com/photo-1592492135673-55966d3b541a?q=80&w=1986&auto=format&fit=crop&ixlib=rb-4.0.3&ixid=M3wxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8fA%3D%3D",
                            Name = "T-Shirt 5",
                            NewPrice = 25L,
                            OldPrice = 30L,
                            Quantity = 100,
                            QuantitySold = 0L,
                            SellerId = 1
                        },
                        new
                        {
                            ProductId = 6,
                            CategoryId = 1,
                            Description = "Description for T-Shirt 6",
                            Img = "https://images.unsplash.com/photo-1617310208925-9ad2a0391d85?q=80&w=1887&auto=format&fit=crop&ixlib=rb-4.0.3&ixid=M3wxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8fA%3D%3D",
                            Name = "T-Shirt 6",
                            NewPrice = 28L,
                            OldPrice = 33L,
                            Quantity = 100,
                            QuantitySold = 0L,
                            SellerId = 1
                        },
                        new
                        {
                            ProductId = 7,
                            CategoryId = 1,
                            Description = "Description for T-Shirt 7",
                            Img = "https://plus.unsplash.com/premium_photo-1670088464876-e1fa625c8697?q=80&w=1886&auto=format&fit=crop&ixlib=rb-4.0.3&ixid=M3wxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8fA%3D%3D",
                            Name = "T-Shirt 7",
                            NewPrice = 30L,
                            OldPrice = 35L,
                            Quantity = 100,
                            QuantitySold = 0L,
                            SellerId = 1
                        },
                        new
                        {
                            ProductId = 8,
                            CategoryId = 1,
                            Description = "Description for T-Shirt 8",
                            Img = "https://images.unsplash.com/photo-1581791538302-03537b9c97bf?q=80&w=1779&auto=format&fit=crop&ixlib=rb-4.0.3&ixid=M3wxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8fA%3D%3D",
                            Name = "T-Shirt 8",
                            NewPrice = 32L,
                            OldPrice = 37L,
                            Quantity = 100,
                            QuantitySold = 0L,
                            SellerId = 1
                        },
                        new
                        {
                            ProductId = 9,
                            CategoryId = 1,
                            Description = "Description for T-Shirt 9",
                            Img = "https://plus.unsplash.com/premium_photo-1687850859076-b8e74a1ac8fa?q=80&w=1887&auto=format&fit=crop&ixlib=rb-4.0.3&ixid=M3wxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8fA%3D%3D",
                            Name = "T-Shirt 9",
                            NewPrice = 35L,
                            OldPrice = 40L,
                            Quantity = 100,
                            QuantitySold = 0L,
                            SellerId = 1
                        },
                        new
                        {
                            ProductId = 10,
                            CategoryId = 1,
                            Description = "Description for T-Shirt 10",
                            Img = "https://images.unsplash.com/photo-1521097769011-905fc0291094?q=80&w=2070&auto=format&fit=crop&ixlib=rb-4.0.3&ixid=M3wxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8fA%3D%3D",
                            Name = "T-Shirt 10",
                            NewPrice = 37L,
                            OldPrice = 42L,
                            Quantity = 100,
                            QuantitySold = 0L,
                            SellerId = 1
                        },
                        new
                        {
                            ProductId = 11,
                            CategoryId = 2,
                            Description = "Description for Jeans 1",
                            Img = "https://plus.unsplash.com/premium_photo-1674828601362-afb73c907ebe?q=80&w=1953&auto=format&fit=crop&ixlib=rb-4.0.3&ixid=M3wxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8fA%3D%3D",
                            Name = "Jeans 1",
                            NewPrice = 30L,
                            OldPrice = 40L,
                            Quantity = 100,
                            QuantitySold = 0L,
                            SellerId = 2
                        },
                        new
                        {
                            ProductId = 12,
                            CategoryId = 2,
                            Description = "Description for Jeans 2",
                            Img = "https://images.unsplash.com/photo-1604176354204-9268737828e4?q=80&w=1780&auto=format&fit=crop&ixlib=rb-4.0.3&ixid=M3wxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8fA%3D%3D",
                            Name = "Jeans 2",
                            NewPrice = 32L,
                            OldPrice = 42L,
                            Quantity = 100,
                            QuantitySold = 0L,
                            SellerId = 2
                        },
                        new
                        {
                            ProductId = 13,
                            CategoryId = 2,
                            Description = "Description for Jeans 3",
                            Img = "https://images.unsplash.com/photo-1542272604-787c3835535d?q=80&w=1926&auto=format&fit=crop&ixlib=rb-4.0.3&ixid=M3wxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8fA%3D%3D",
                            Name = "Jeans 3",
                            NewPrice = 34L,
                            OldPrice = 44L,
                            Quantity = 100,
                            QuantitySold = 0L,
                            SellerId = 2
                        },
                        new
                        {
                            ProductId = 14,
                            CategoryId = 2,
                            Description = "Description for Jeans 4",
                            Img = "https://images.unsplash.com/photo-1623120389902-6c846c80f4c8?q=80&w=1780&auto=format&fit=crop&ixlib=rb-4.0.3&ixid=M3wxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8fA%3D%3D",
                            Name = "Jeans 4",
                            NewPrice = 36L,
                            OldPrice = 46L,
                            Quantity = 100,
                            QuantitySold = 0L,
                            SellerId = 2
                        },
                        new
                        {
                            ProductId = 15,
                            CategoryId = 2,
                            Description = "Description for Jeans 5",
                            Img = "https://plus.unsplash.com/premium_photo-1675877946243-bc3f83e65afe?q=80&w=1887&auto=format&fit=crop&ixlib=rb-4.0.3&ixid=M3wxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8fA%3D%3D",
                            Name = "Jeans 5",
                            NewPrice = 38L,
                            OldPrice = 48L,
                            Quantity = 100,
                            QuantitySold = 0L,
                            SellerId = 2
                        },
                        new
                        {
                            ProductId = 16,
                            CategoryId = 2,
                            Description = "Description for Jeans 6",
                            Img = "https://images.unsplash.com/photo-1608613517869-07b097abbcf3?q=80&w=2070&auto=format&fit=crop&ixlib=rb-4.0.3&ixid=M3wxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8fA%3D%3D",
                            Name = "Jeans 6",
                            NewPrice = 40L,
                            OldPrice = 50L,
                            Quantity = 100,
                            QuantitySold = 0L,
                            SellerId = 2
                        },
                        new
                        {
                            ProductId = 17,
                            CategoryId = 2,
                            Description = "Description for Jeans 7",
                            Img = "https://images.unsplash.com/photo-1474570094496-a0e20f2e8050?q=80&w=2070&auto=format&fit=crop&ixlib=rb-4.0.3&ixid=M3wxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8fA%3D%3D",
                            Name = "Jeans 7",
                            NewPrice = 42L,
                            OldPrice = 52L,
                            Quantity = 100,
                            QuantitySold = 0L,
                            SellerId = 2
                        },
                        new
                        {
                            ProductId = 18,
                            CategoryId = 2,
                            Description = "Description for Jeans 8",
                            Img = "https://images.unsplash.com/photo-1576995853123-5a10305d93c0?q=80&w=2070&auto=format&fit=crop&ixlib=rb-4.0.3&ixid=M3wxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8fA%3D%3D",
                            Name = "Jeans 8",
                            NewPrice = 44L,
                            OldPrice = 54L,
                            Quantity = 100,
                            QuantitySold = 0L,
                            SellerId = 2
                        },
                        new
                        {
                            ProductId = 19,
                            CategoryId = 2,
                            Description = "Description for Jeans 9",
                            Img = "https://plus.unsplash.com/premium_photo-1674828601017-2b8d4ea90aca?q=80&w=1932&auto=format&fit=crop&ixlib=rb-4.0.3&ixid=M3wxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8fA%3D%3D",
                            Name = "Jeans 9",
                            NewPrice = 46L,
                            OldPrice = 56L,
                            Quantity = 100,
                            QuantitySold = 0L,
                            SellerId = 2
                        },
                        new
                        {
                            ProductId = 20,
                            CategoryId = 2,
                            Description = "Description for Jeans 10",
                            Img = "https://images.unsplash.com/photo-1589561818145-eb2a4ba71a3c?q=80&w=2069&auto=format&fit=crop&ixlib=rb-4.0.3&ixid=M3wxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8fA%3D%3D",
                            Name = "Jeans 10",
                            NewPrice = 48L,
                            OldPrice = 58L,
                            Quantity = 100,
                            QuantitySold = 0L,
                            SellerId = 2
                        },
                        new
                        {
                            ProductId = 21,
                            CategoryId = 3,
                            Description = "Description for Jacket 1",
                            Img = "https://plus.unsplash.com/premium_photo-1671030274122-b6ac34f87b8b?q=80&w=2070&auto=format&fit=crop&ixlib=rb-4.0.3&ixid=M3wxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8fA%3D%3D",
                            Name = "Jacket 1",
                            NewPrice = 50L,
                            OldPrice = 60L,
                            Quantity = 100,
                            QuantitySold = 0L,
                            SellerId = 2
                        },
                        new
                        {
                            ProductId = 22,
                            CategoryId = 3,
                            Description = "Description for Jacket 2",
                            Img = "https://images.unsplash.com/photo-1542327897-d73f4005b533?q=80&w=1887&auto=format&fit=crop&ixlib=rb-4.0.3&ixid=M3wxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8fA%3D%3D",
                            Name = "Jacket 2",
                            NewPrice = 55L,
                            OldPrice = 65L,
                            Quantity = 100,
                            QuantitySold = 0L,
                            SellerId = 2
                        },
                        new
                        {
                            ProductId = 23,
                            CategoryId = 3,
                            Description = "Description for Jacket 3",
                            Img = "https://images.unsplash.com/photo-1576993537667-c6d2386f90a2?q=80&w=2070&auto=format&fit=crop&ixlib=rb-4.0.3&ixid=M3wxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8fA%3D%3D",
                            Name = "Jacket 3",
                            NewPrice = 58L,
                            OldPrice = 68L,
                            Quantity = 100,
                            QuantitySold = 0L,
                            SellerId = 2
                        },
                        new
                        {
                            ProductId = 24,
                            CategoryId = 3,
                            Description = "Description for Jacket 4",
                            Img = "https://images.unsplash.com/photo-1551318181-655e9748c0a6?q=80&w=1887&auto=format&fit=crop&ixlib=rb-4.0.3&ixid=M3wxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8fA%3D%3D",
                            Name = "Jacket 4",
                            NewPrice = 60L,
                            OldPrice = 70L,
                            Quantity = 100,
                            QuantitySold = 0L,
                            SellerId = 2
                        },
                        new
                        {
                            ProductId = 25,
                            CategoryId = 3,
                            Description = "Description for Jacket 5",
                            Img = "https://plus.unsplash.com/premium_photo-1683121231638-4100d7f6deb2?q=80&w=1888&auto=format&fit=crop&ixlib=rb-4.0.3&ixid=M3wxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8fA%3D%3D",
                            Name = "Jacket 5",
                            NewPrice = 62L,
                            OldPrice = 72L,
                            Quantity = 100,
                            QuantitySold = 0L,
                            SellerId = 2
                        },
                        new
                        {
                            ProductId = 31,
                            CategoryId = 4,
                            Description = "Description for Shoe 1",
                            Img = "https://plus.unsplash.com/premium_photo-1682435561654-20d84cef00eb?q=80&w=1918&auto=format&fit=crop&ixlib=rb-4.0.3&ixid=M3wxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8fA%3D%3D",
                            Name = "Shoe 1",
                            NewPrice = 40L,
                            OldPrice = 50L,
                            Quantity = 100,
                            QuantitySold = 0L,
                            SellerId = 1
                        },
                        new
                        {
                            ProductId = 32,
                            CategoryId = 4,
                            Description = "Description for Shoe 2",
                            Img = "https://images.unsplash.com/photo-1542291026-7eec264c27ff?q=80&w=2070&auto=format&fit=crop&ixlib=rb-4.0.3&ixid=M3wxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8fA%3D%3D",
                            Name = "Shoe 2",
                            NewPrice = 42L,
                            OldPrice = 52L,
                            Quantity = 100,
                            QuantitySold = 0L,
                            SellerId = 1
                        },
                        new
                        {
                            ProductId = 33,
                            CategoryId = 4,
                            Description = "Description for Shoe 3",
                            Img = "https://images.unsplash.com/photo-1511556532299-8f662fc26c06?q=80&w=2070&auto=format&fit=crop&ixlib=rb-4.0.3&ixid=M3wxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8fA%3D%3D",
                            Name = "Shoe 3",
                            NewPrice = 45L,
                            OldPrice = 55L,
                            Quantity = 100,
                            QuantitySold = 0L,
                            SellerId = 1
                        },
                        new
                        {
                            ProductId = 34,
                            CategoryId = 4,
                            Description = "Description for Shoe 4",
                            Img = "https://images.unsplash.com/photo-1561909848-977d0617f275?q=80&w=1780&auto=format&fit=crop&ixlib=rb-4.0.3&ixid=M3wxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8fA%3D%3D",
                            Name = "Shoe 4",
                            NewPrice = 48L,
                            OldPrice = 58L,
                            Quantity = 100,
                            QuantitySold = 0L,
                            SellerId = 1
                        },
                        new
                        {
                            ProductId = 35,
                            CategoryId = 4,
                            Description = "Description for Shoe 5",
                            Img = "https://plus.unsplash.com/premium_photo-1682125177822-63c27a3830ea?q=80&w=1887&auto=format&fit=crop&ixlib=rb-4.0.3&ixid=M3wxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8fA%3D%3D",
                            Name = "Shoe 5",
                            NewPrice = 50L,
                            OldPrice = 60L,
                            Quantity = 100,
                            QuantitySold = 0L,
                            SellerId = 1
                        });
                });

            modelBuilder.Entity("ClothesStoreMobileApplication.Models.ProductOption", b =>
                {
                    b.Property<int>("ProductOptionsId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ProductOptionsId"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("ProductOptionsId");

                    b.ToTable("ProductOptions");

                    b.HasData(
                        new
                        {
                            ProductOptionsId = 1,
                            Name = "Size"
                        },
                        new
                        {
                            ProductOptionsId = 2,
                            Name = "Color"
                        });
                });

            modelBuilder.Entity("ClothesStoreMobileApplication.Models.ReplyReview", b =>
                {
                    b.Property<int>("ReplyId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ReplyId"));

                    b.Property<string>("Content")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("ReplyDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("ReviewId")
                        .HasColumnType("int");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("ReplyId");

                    b.HasIndex("ReviewId");

                    b.HasIndex("UserId");

                    b.ToTable("ReplyReviews");

                    b.HasData(
                        new
                        {
                            ReplyId = 1,
                            Content = "Thank you for your feedback!",
                            ReplyDate = new DateTime(2024, 9, 21, 21, 6, 35, 513, DateTimeKind.Local).AddTicks(1445),
                            ReviewId = 1,
                            UserId = 1
                        },
                        new
                        {
                            ReplyId = 2,
                            Content = "We appreciate your input!",
                            ReplyDate = new DateTime(2024, 9, 21, 21, 6, 35, 513, DateTimeKind.Local).AddTicks(1447),
                            ReviewId = 2,
                            UserId = 2
                        });
                });

            modelBuilder.Entity("ClothesStoreMobileApplication.Models.Review", b =>
                {
                    b.Property<int>("ReviewId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ReviewId"));

                    b.Property<string>("Comment")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("CustomerId")
                        .HasColumnType("int");

                    b.Property<int?>("OrderId")
                        .HasColumnType("int");

                    b.Property<int?>("ProductId")
                        .HasColumnType("int");

                    b.Property<int>("Rating")
                        .HasColumnType("int");

                    b.HasKey("ReviewId");

                    b.HasIndex("CustomerId");

                    b.HasIndex("OrderId");

                    b.HasIndex("ProductId");

                    b.ToTable("Reviews");

                    b.HasData(
                        new
                        {
                            ReviewId = 1,
                            Comment = "Excellent product!",
                            CustomerId = 1,
                            OrderId = 1,
                            ProductId = 1,
                            Rating = 5
                        },
                        new
                        {
                            ReviewId = 2,
                            Comment = "Very good, but could improve.",
                            CustomerId = 1,
                            OrderId = 2,
                            ProductId = 1,
                            Rating = 4
                        });
                });

            modelBuilder.Entity("ClothesStoreMobileApplication.Models.Seller", b =>
                {
                    b.Property<int>("SellerId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("SellerId"));

                    b.Property<string>("Address")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("Avt")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CompanyName")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Cover")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Description")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("SellerId");

                    b.HasIndex("UserId");

                    b.ToTable("Sellers");

                    b.HasData(
                        new
                        {
                            SellerId = 1,
                            Address = "123 Fashion Street, City X",
                            Avt = "https://i.imgur.com/thZDKR1.png",
                            CompanyName = "Fashion World",
                            Cover = "https://i.imgur.com/nIBeNMD.jpeg",
                            Description = "A well-known fashion retailer offering high-quality garments.",
                            UserId = 2
                        },
                        new
                        {
                            SellerId = 2,
                            Address = "456 Shoe Street, City Y",
                            Avt = "https://i.imgur.com/7ZIv1jz.png",
                            CompanyName = "Shoe Haven",
                            Cover = "https://i.imgur.com/7ZIv1jz.png",
                            Description = "A leading shoe retailer offering a wide range of footwear.",
                            UserId = 4
                        });
                });

            modelBuilder.Entity("ClothesStoreMobileApplication.Models.User", b =>
                {
                    b.Property<int>("UserId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("UserId"));

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Phone")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("Status")
                        .HasColumnType("bit");

                    b.Property<int>("UserType")
                        .HasColumnType("int");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UserId");

                    b.ToTable("Users");

                    b.HasData(
                        new
                        {
                            UserId = 1,
                            Email = "admin@example.com",
                            Password = "adminpassword",
                            Phone = "0123456789",
                            Status = true,
                            UserType = 0,
                            Username = "admin"
                        },
                        new
                        {
                            UserId = 2,
                            Email = "seller1@example.com",
                            Password = "seller1password",
                            Phone = "0987654321",
                            Status = true,
                            UserType = 1,
                            Username = "seller1"
                        },
                        new
                        {
                            UserId = 3,
                            Email = "customer1@example.com",
                            Password = "customer1password",
                            Phone = "0123987654",
                            Status = true,
                            UserType = 2,
                            Username = "customer1"
                        },
                        new
                        {
                            UserId = 4,
                            Email = "seller2@example.com",
                            Password = "seller2password",
                            Phone = "0987123456",
                            Status = true,
                            UserType = 1,
                            Username = "seller2"
                        });
                });

            modelBuilder.Entity("ClothesStoreMobileApplication.Models.Admin", b =>
                {
                    b.HasOne("ClothesStoreMobileApplication.Models.User", "User")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("ClothesStoreMobileApplication.Models.Cart", b =>
                {
                    b.HasOne("ClothesStoreMobileApplication.Models.Customer", "Customer")
                        .WithMany("Carts")
                        .HasForeignKey("CustomerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Customer");
                });

            modelBuilder.Entity("ClothesStoreMobileApplication.Models.CartItem", b =>
                {
                    b.HasOne("ClothesStoreMobileApplication.Models.Cart", "Cart")
                        .WithMany()
                        .HasForeignKey("CartId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ClothesStoreMobileApplication.Models.Product", "Product")
                        .WithMany()
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Cart");

                    b.Navigation("Product");
                });

            modelBuilder.Entity("ClothesStoreMobileApplication.Models.Chat", b =>
                {
                    b.HasOne("ClothesStoreMobileApplication.Models.Customer", "Customer")
                        .WithMany()
                        .HasForeignKey("CustomerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ClothesStoreMobileApplication.Models.Seller", "Seller")
                        .WithMany()
                        .HasForeignKey("SellerId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Customer");

                    b.Navigation("Seller");
                });

            modelBuilder.Entity("ClothesStoreMobileApplication.Models.ChatMessage", b =>
                {
                    b.HasOne("ClothesStoreMobileApplication.Models.Chat", "Chat")
                        .WithMany("ChatMessages")
                        .HasForeignKey("RoomId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ClothesStoreMobileApplication.Models.User", "User")
                        .WithMany()
                        .HasForeignKey("SenderId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("Chat");

                    b.Navigation("User");
                });

            modelBuilder.Entity("ClothesStoreMobileApplication.Models.Customer", b =>
                {
                    b.HasOne("ClothesStoreMobileApplication.Models.User", "User")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("ClothesStoreMobileApplication.Models.Option", b =>
                {
                    b.HasOne("ClothesStoreMobileApplication.Models.ProductOption", "ProductOptions")
                        .WithMany("Options")
                        .HasForeignKey("OptionGroupId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ClothesStoreMobileApplication.Models.Product", "Product")
                        .WithMany("Options")
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Product");

                    b.Navigation("ProductOptions");
                });

            modelBuilder.Entity("ClothesStoreMobileApplication.Models.Order", b =>
                {
                    b.HasOne("ClothesStoreMobileApplication.Models.Customer", "Customer")
                        .WithMany("Orders")
                        .HasForeignKey("CustomerId");

                    b.Navigation("Customer");
                });

            modelBuilder.Entity("ClothesStoreMobileApplication.Models.OrderItem", b =>
                {
                    b.HasOne("ClothesStoreMobileApplication.Models.Order", "Order")
                        .WithMany()
                        .HasForeignKey("OrderId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ClothesStoreMobileApplication.Models.Product", "Product")
                        .WithMany()
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Order");

                    b.Navigation("Product");
                });

            modelBuilder.Entity("ClothesStoreMobileApplication.Models.Product", b =>
                {
                    b.HasOne("ClothesStoreMobileApplication.Models.Cart", null)
                        .WithMany("Products")
                        .HasForeignKey("CartId");

                    b.HasOne("ClothesStoreMobileApplication.Models.Category", "Category")
                        .WithMany("Products")
                        .HasForeignKey("CategoryId");

                    b.HasOne("ClothesStoreMobileApplication.Models.Seller", "Seller")
                        .WithMany("Products")
                        .HasForeignKey("SellerId");

                    b.Navigation("Category");

                    b.Navigation("Seller");
                });

            modelBuilder.Entity("ClothesStoreMobileApplication.Models.ReplyReview", b =>
                {
                    b.HasOne("ClothesStoreMobileApplication.Models.Review", "Review")
                        .WithMany()
                        .HasForeignKey("ReviewId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ClothesStoreMobileApplication.Models.User", "User")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Review");

                    b.Navigation("User");
                });

            modelBuilder.Entity("ClothesStoreMobileApplication.Models.Review", b =>
                {
                    b.HasOne("ClothesStoreMobileApplication.Models.Customer", "Customer")
                        .WithMany()
                        .HasForeignKey("CustomerId");

                    b.HasOne("ClothesStoreMobileApplication.Models.Order", "Order")
                        .WithMany()
                        .HasForeignKey("OrderId");

                    b.HasOne("ClothesStoreMobileApplication.Models.Product", "Product")
                        .WithMany()
                        .HasForeignKey("ProductId");

                    b.Navigation("Customer");

                    b.Navigation("Order");

                    b.Navigation("Product");
                });

            modelBuilder.Entity("ClothesStoreMobileApplication.Models.Seller", b =>
                {
                    b.HasOne("ClothesStoreMobileApplication.Models.User", "User")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("ClothesStoreMobileApplication.Models.Cart", b =>
                {
                    b.Navigation("Products");
                });

            modelBuilder.Entity("ClothesStoreMobileApplication.Models.Category", b =>
                {
                    b.Navigation("Products");
                });

            modelBuilder.Entity("ClothesStoreMobileApplication.Models.Chat", b =>
                {
                    b.Navigation("ChatMessages");
                });

            modelBuilder.Entity("ClothesStoreMobileApplication.Models.Customer", b =>
                {
                    b.Navigation("Carts");

                    b.Navigation("Orders");
                });

            modelBuilder.Entity("ClothesStoreMobileApplication.Models.Product", b =>
                {
                    b.Navigation("Options");
                });

            modelBuilder.Entity("ClothesStoreMobileApplication.Models.ProductOption", b =>
                {
                    b.Navigation("Options");
                });

            modelBuilder.Entity("ClothesStoreMobileApplication.Models.Seller", b =>
                {
                    b.Navigation("Products");
                });
#pragma warning restore 612, 618
        }
    }
}
